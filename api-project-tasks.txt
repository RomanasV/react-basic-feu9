API nuoroda: https://jsonplaceholder.typicode.com

1. Sukurti vartotojų puslapį (users), kuriame būtų atvaizduotas vartotojų sąrašas.
  1.1. Prie vartotojo turėtu būti jo vardas.
  1.2. Paspaudus ant vartotojo - nukreipiama į jo user puslapį.
  1.3. Prie vartotojo vardo turėtų būti parašytų post'ų skaičius.

2. Sukurti puslapį, kuriame bus atvaizduojami įrašai (posts). Kiekvienas įrašas turi:
  2.1. Pavadinimą. Tai turi būti nuoroda. Ji turi vesti į post puslapį.
  2.2. Autorių. Tai turi būti nuoroda. Ji turi vesti į user puslapį.
  2.3. Prie pavadinimo pridėti įrašo komentarų skaičių.

3. Tokiu pačiu principu, kaip ir vartotojų bei įrašų puslapiams, sukurti puslapį albumams (albums). Prie kiekvieno albumo turi būti:
  3.1. Parašytas jo pavadinimas.
  3.2. Parašytas vartotojo, sukūrusio šį albumą, vardas.
  3.3. Albume esančių nuotraukų skaičius.
  3.4. Viena nuotrauka.
  3.5. Šis elementas turi būti nuoroda.

4. Sukurti navigacijos elementą, kuris nukreips į puslapius:
  4.1. Home / pagrindinis puslapis.
  4.2. Users / vartotojų puslapis.
  4.3. Albums / albumų puslapis.
  4.4. Posts / pranešimų puslapis.
  4.5. Pakeisti aktyvaus puslapio nuorodos stilių.

5. Sukurti naują puslapį use, kuriame bus atvaizduojama vartotojo informacija:
  5.1. Pilnas vardas.
  5.2. Vartotojo vardas / nick'as.
  5.3. El. paštas.
  5.4. Adresas, kuris turės gatvę, namo numerį, miestą, pašto kodą. Paspaudus ant adreso, pagal koordinates, turėtų atidaryti šios vietos Google Maps.
  5.5. Telefono numeris.
  5.6. Internetinio puslapio adresas.
  5.7. Įmonės, kurioje dirba, pavadinimas.

6. Šiame puslapyje (use) turi būti atvaizduojama:
  6.1. Visi vartotojo parašyti įrašai (posts). Kiekvienas post'as turi turėti nuorodą.
  6.2. Visi vartotojo sukurti foto albumai. Kiekvienas albumas turės pavadinimą, kuris turi būti nuoroda.

7. Sukurti naują puslapį post.html ir jame atvaizduoti:
  7.1. Įrašo (post) pavadinimą.
  7.2. Autoriaus vardą. Paspaudus ant autoriaus vardo, turėtų atidaryti autoriaus puslapį.
  7.3. Įrašo turinį.
  7.4. Įrašo komentarus. Kiekvienas komentaras turi:
    7.4.1. Komentaro pavadinimą.
    7.4.2. Komentaro turinį - pastraipą.
    7.4.3. Komentarą parašiusio asmens el. pašto adresą.
  7.5. Nuoroda „Kiti autoriaus įrašai", kurią paspaudus bus nukreipiama į puslapį posts.html. Jame vėliau bus atvaizduojami visi šio vartotojo įrašai.

8. Sukurti naują puslapį album.html ir jame atvaizduoti:
  8.1. Albumo pavadinimą.
  8.2. Album autoriaus vardą. Paspaudus ant vardo - nukreipiama į autoriaus puslapį.
  8.3. Skiltis, kurioje atvaizduojamos visos albumo nuotraukos. Panaudoti library (biblioteką), kuri skirta gražiam galerijos atvaizdavimui, pvz.:
    8.3.1. https://photoswipe.com/
    8.3.2. https://nanogallery2.nanostudio.org/
    8.3.3. https://sachinchoolur.github.io/lightgallery.js/
    8.3.4. Arba bet kurią kitą.

10. Sukurti pagrindinį puslapį (index). Jame laisva forma turi būti atvaizduoti:
  1.1. Įrašai (post).
  1.2. Albumai.
  1.3. Vartotojai.

9. Sukurti paieškos funkcionalumą navigacijos elemente:
9.1. Navigacijos elemente sukurti formą, kuri turi text tipo input elementą (nepamiršti pridėti name atributą).
9.2. Formos submit metu, naudojant action atributą, nukreipti į naują puslapį (search).
9.3. Šiame puslapyje atvaizduoti paieškos rezultatą.
9.3.1. Jeigu nėra tinkamų rezultatų, tai parašyti jog rezultatų pagal užklausą nerasta.

Papildoma: 
9.4. Search puslapyje turi būti paieškos forma, kuri veikia neperkraunant puslapio.
9.5. Search puslapyje sukurtoje paieškos formoje pridėti galimybė ieškoti pagal pasirinktą kategoriją: posts, users, comments, albums, photos.


10. Sukurti puslapį create-post
10.1 Puslapyje sukurti formą. Ji turės:
10.1.1. Input elementą posto pavadinimui įvesti.
10.1.2. Textarea elementą posto turiniui įvesti.
10.1.3. Select elementą, kuriame būtų atvaizduojami visų vartotojų vardai (option elementų value naudoti vartotojų id).
10.2. Formos submit metu:
10.2.1. Iš formos duomenų suformuluoti objektą pagal API reikalavimus.
10.2.2. Su šiais duomenimis išsiųsti POST užklausą pagal API reikalavimus.

11.1. Prie kiekvieno post'o pridėti nuorodą.
11.1.1. Nuorodos tekstas: „Redaguoti" arba bet koks kitas jūsų pasirinktas.
11.1.2. Nuoroda turi nuvestį į edit-post puslapį.
11.1.3. Nuoroda turi perduoti redaguojamo post'o ID.

11.2. Sukurti puslapį edit-post
11.2.1. Iš nuorodos išimti post'o ID.
11.2.2. Iš API gauti visą post'o informaciją pagal post'o ID.

11.3. Puslapyje sukurti formą. Ji turės:
11.3.1. Input elementą posto pavadinimui įvesti.
11.3.2. Textarea elementą posto turiniui įvesti.
11.3.3. Select elementą, kuriame būtų atvaizduojami visų vartotojų vardai (option elementų value naudoti vartotojų id).
11.3.4. Iš API gautais duomenimis (11.2.2. užduotis) užpildyti formą.

11.4. Formos submit metu:
11.4.1. Iš formos duomenų suformuluoti objektą pagal API reikalavimus.
11.4.2. Su šiais duomenimis išsiųsti PUT užklausą pagal API reikalavimus.


CREATE (post):
1. User
2. Post
3. Album
4. Comment
5. Photo

READ (get):
1. User
2. Post
3. Album
4. Comment
5. Photo

UPDATE (put ir patch):
1. User
2. Post
3. Album
4. Comment
5. Photo

DELETE (delete):
1. User
2. Post
3. Album
4. Comment
5. Photo